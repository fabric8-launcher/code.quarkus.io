# auto detects a good number of processes to run
worker_processes auto;
pid /tmp/nginx.pid;

#Provides the configuration file context in which the directives that affect connection processing are specified.
events {
  # Sets the maximum number of simultaneous connections that can be opened by a worker process.
  worker_connections 8000;
  # Tells the worker to accept multiple connections at a time
  multi_accept on;
}

http {
  # what times to include
  include       /etc/nginx/mime.types;
  # what is the default one
  default_type  application/octet-stream;
  client_body_temp_path /tmp/client_temp;
  proxy_temp_path       /tmp/proxy_temp_path;
  fastcgi_temp_path     /tmp/fastcgi_temp;
  uwsgi_temp_path       /tmp/uwsgi_temp;
  scgi_temp_path        /tmp/scgi_temp;

  # Sets the path, format, and configuration for a buffered log write
  log_format compression '$remote_addr - $remote_user [$time_local] '
  '"$request" $status $upstream_addr '
  '"$http_referer" "$http_user_agent"';

  map $host $redirectToCode {
    hostnames;
    start.quarkus.io 1;
    launch.quarkus.io 1;
    default 0;
  }

  map $host $robotTag {
    default  '';
    ~.*stage.* 'noindex';
  }

  server {
    listen 8082 default_server;
    access_log /var/log/nginx/access.log compression;

    root /var/www;
    index index.html;

    if ($redirectToCode = 1) {
      return 301 $scheme://code.quarkus.io$request_uri;
    }

    location ~ ^/(api|q|d)/.*$ {
      resolver 127.0.0.11 valid=30s;
      resolver_timeout 2s;
      set $codeQuarkusApi code-quarkus-api;
      proxy_pass http://$codeQuarkusApi:8080;
    }

    location ~ ^/static/.*$ {
      gzip_static on;
      expires 1y;
      try_files $uri =404;
    }

    location = /nginx/health {
      access_log off;
      return 200 "healthy\n";
    }

    location / {
      try_files $uri /index.html;
    }

    location = /index.html {
      gzip_static on;
      expires 0;
      add_header Cache-Control no-cache;
      add_header X-Robots-Tag $robotTag;
    }

    location ~ ^.+\..+$ {
      return 404;
    }
  }
}